% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setMBOControlRefinement.R
\name{setMBOControlRefinement}
\alias{setMBOControlRefinement}
\title{Sets Refinement Control}
\usage{
setMBOControlRefinement(control, refinement.control, refinement.learner,
  fallback = FALSE)
}
\arguments{
\item{control}{[\code{\link{MBOControl}}]\cr
Control object for mbo.}

\item{refinement.control}{[\code{MBOControl}]}

\item{refinement.learner}{[\code{\link[mlr]{Learner}}]}

\item{fallback}{[\code{logical(1)}]\cr
In case the refinement.learner (i.e. Kriging) was not able to fit a good regression, should we fall back to the proposal of the original learner and infill.crit? Default is \code{FALSE}.
If this is true fallbacks are indicated by the OptPath column \code{constant.model == TRUE} and empty values for \code{refinement_} infill.crit components}
}
\description{
Put another control object into the mbo control object to control the refinement.
}
